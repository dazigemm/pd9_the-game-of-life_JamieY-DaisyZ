NEWER AT BOTTOM
THE GAME OF LIFE - APCS2 (2014)

May 23, 2014
FINAL PROJECT TIME! 

May 27, 2014
We further developed our idea today and then we met with Mr. Brown to discuss our project. Andrew Fan joined the team! Yay!
Mash: This is a one player game with two versions: Life and Stuy. Players will give outcomes they would like to see and use a spinner to generate a spinner. The computer will run, and then will show the results. 
Added: We will then take the results and store them for analysis. We will find the least and most common answers for each category. We'll figure out details later. 

Version 0.00 [May 28, 2014]
~Deciding flow of how the game will progress and what will be available to the player(s).
There will be a MASH.java file that will be the driver file. It will contain the main() method as well as other functions, including a spinner, a toString, various printing methods, user input (to be implemented later on), and other things. Current plans include a Category.java class that will contain an array or arraylist containing the possible choices. The driver method will use a while loop and go through the categories using a counter, removing choices based on the spinner's result. At the end, it will print the results. Statistics will be implemented at a later date.

Version 0.00a [May 28, 2014]
Andrew Fan: Added Category.java. May require additional methods. I used a LinkedList as the base because we'll be removing things from the categories very often.

Version 0.00b [May 29, 2014]
Considered a lot of possibilities. We WILL be using a circularly linked list of sorts (in some way or another) in order to store the data for each option, but the implmentation of the categories may in fact require a completely different approach than the one included in Category.java, which may require scrapping.

Version 0.00c [May 30, 2014]
Andrew Fan: Changes to Category.java.
We have decided to use the circularly linked list that we built in class. ArrayList<String> will be stored in each node. We will try to get the game working by the middle of the week and start the statistical part then. 
Andrew Fan: Added heaps for statistics later. They should be functional.

Version 0.00d [Jun 2, 2014]
Andrew Fan: Driver skeleton with almost nothing in it added

Tried to combine DLLNode & Category since they should be the same class...But DLLNode has the extra function of being able to access its previous node which we will not be using. 

Andrew and Jamie: Fixed up part of the user selection portion of the gameSelect and formed a basic structure for things to work inside the driver, MASH.java, while the Category class is renovated.

Version 0.00e [Jun 3, 2014]
Andrew and Jamie: Continued to build the setup of the game. 
Daisy: Continued working on Category. Has gotten CLList to compile when DLLNode is replaced with Category. 
WE CAN DO THIS!!!

Version 0.00f [Jun 4, 2014]
Using Daisy's CLList edits, Jamie and Andrew wrote the code to create the CLList and add the user-selected choices to the categories. Compiled, but we don't know if it works...

Version 0.00g [Jun 5, 2014]
played around with CLList, and might have created a working version of MASH (in the main method, which is the wrong place to put it). It needs to be formatted correctly and turned into methods.
Further testing is necessary. There's something weird about the counting. Or maybe I just can't count?
Looked up how to get user input through the following website:
http://stackoverflow.com/questions/4644415/java-how-to-get-input-from-system-console
Don't really understand the how and why behind this though. 

Version 0.00h [Jun 9, 2014]
continued testing by using CLList. Tried if else statements...still not too sure about the counting

Version 0.01 [Jun 10, 2014]
Jamie: After days and days of staring at semi working code, Daisy and I have discovered the magic codes that make this project (kinda) works!!!!!! There was a lot of sweat and tears, mostly on my part. YAYYYYYYYY!!!!!!!!!! WE GOT THIS.

Version 0.01a [Jun 11, 2014]
Andrew: Work has progressed on the Statistics end (not really). I also forked but then realized that since there's a shared devlog, it's better to just push and pull to the same repo. Still need to test my heapsort and add in median and mode capabilities for integers. Statistics will use an ArrayList, although some of the functions will be applicable to arrays as well.

Version 0.01b [Jun 12, 2014]
Andrew: Statistics fixes, etc.
Jamie: Thread.sleep implementation, major improvements to MASH.java with much help from Daisy

Version 0.01c [Jun 13, 2014]
Daisy: We figured out how to create file. Now trying to limit user input. 

Version 0.01d [June 15, 2014]
Andrew: Begun statistical data obtaining from a file using Scanners and delimiters

Version 0.01e [June 15, 2014]
Andrew: Statistics now runs Mean and Median on a file successfully. As for making that file... -_-
Jamie: Tried to make the game easier to read. Working on input limitations

Version 0.01f [June 15, 2014]
Andrew: ReadMe now helpful, Statistics.java no longer errors when a file is missing.

Version 0.01g [June 15, 2014]
Jamie and Daisy: Squashed some bugs. 